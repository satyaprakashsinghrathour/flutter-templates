import 'dart:convert';

import 'package:http/http.dart' as http;
import 'package:flutter/material.dart';
import 'package:future_to_provider/modals/main_list.dart';

//import '../widget/detailscreen.dart';
class PrividerJob1 with ChangeNotifier {
  List<Jobs> _list = [];
  List<Jobs> get list {
    return [..._list];
  }

  Future<void> fetchAutogenerated() async {
    print('before object');
    final response = await http
        // .get(Uri.parse('https://jsonplaceholder.typicode.com/Autogenerateds/1'));
        // .get(Uri.parse('https://jsonplaceholder.typicode.com/Autogenerateds'));
        .get(Uri.parse('https://remotive.io/api/remote-jobs/categories'));
    print('after object');
    final extractedDate =
        await json.decode(response.body) as Map<String, dynamic>;

    print('ext ${extractedDate['jobs']}');
    // print(json.decode(response.body));
    print('after object');
    print(response.statusCode);
    final List<Jobs> loadedJobss = [];
    extractedDate['jobs'].forEach((prodData) {
      loadedJobss.add(Jobs(
        id: prodData['id'],
        name: prodData['name'],
        slug: prodData['slug'],
        // id: prodId.toString(),
        // price: prodData['title'],
        // discription: prodData['discription'],
        // imgurl: prodData['imageurl'],
        // title: prodData['title'],
        // isfavourite: prodData['isfavourite'],
      ));
    });
    _list = loadedJobss;

    notifyListeners();
    print(' _list length${_list.length}');
    // if (response.statusCode == 200) {
    //   // If the server did return a 200 OK response,
    //   // then parse the JSON.
    //   // return Autogenerated.fromJson(jsonDecode(response.body));

    //   return Autogenerated.fromJson(jsonDecode(response.body));
    // } else {
    //   // If the server did not return a 200 OK response,
    //   // then throw an exception.
    //   throw Exception('Failed to load Autogenerated');
    // }
  }

  // Autogenerated.fromJson(Map<String, dynamic> json) {
  //   s0LegalNotice = json['0-legal-notice'];
  //   jobCount = json['job-count'];
  //   if (json['jobs'] != null) {
  //     // jobs = new List<Jobs>();
  //     // List<Jobs> jobs = [];
  //     json['jobs'].forEach((v) {
  //       jobs.add(new Jobs.fromJson(v));
  //     });
  //     print('job i length ${jobs.length}');
  //   }
  // }
  // // List<Jobs> get item {
  // //   return [...jobs];
  // // }

  // Map<String, dynamic> toJson() {
  //   final Map<String, dynamic> data = new Map<String, dynamic>();
  //   data['0-legal-notice'] = this.s0LegalNotice;
  //   data['job-count'] = this.jobCount;
  //   // ignore: unnecessary_null_comparison
  //   if (this.jobs != null) {
  //     data['jobs'] = this.jobs.map((v) => v.toJson()).toList();
  //   }
  //   return data;
  // }
}
